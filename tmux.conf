set -g default-terminal "screen-256color"
set -g repeat-time 125
set-option -g base-index 1
set-window-option -g pane-base-index 1
unbind C-b
#set-option -g prefix C-Space
bind Space send-prefix
bind Space copy-mode
bind C-Space copy-mode

bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# vi-style controls for copy mode
setw -g mode-keys vi

bind h set-option -g status

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


set -g status-bg colour40
setw -g window-status-current-bg colour40


bind -n M-F11 set -qg status-bg colour25
bind -n M-F12 set -qg status-bg colour40
bind -n S-up \
	send-keys M-F12 \; \
	set -qg status-bg colour25 \; \
	set -qg prefix C-b
bind -n S-down \
	send-keys M-F11 \; \
	set -qg status-bg colour40 \; \
	set -qg prefix C-Space
